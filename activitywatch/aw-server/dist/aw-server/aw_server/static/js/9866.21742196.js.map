{"version":3,"file":"js/9866.21742196.js","mappings":"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","sources":["webpack://aw-webui/./node_modules/lodash/_baseTrim.js","webpack://aw-webui/./node_modules/lodash/_baseValues.js","webpack://aw-webui/./node_modules/lodash/_castFunction.js","webpack://aw-webui/./node_modules/lodash/_createFind.js","webpack://aw-webui/./node_modules/lodash/_trimmedEndIndex.js","webpack://aw-webui/./node_modules/lodash/each.js","webpack://aw-webui/./node_modules/lodash/find.js","webpack://aw-webui/./node_modules/lodash/findIndex.js","webpack://aw-webui/./node_modules/lodash/forEach.js","webpack://aw-webui/./node_modules/lodash/includes.js","webpack://aw-webui/./node_modules/lodash/isString.js","webpack://aw-webui/./node_modules/lodash/toFinite.js","webpack://aw-webui/./node_modules/lodash/toInteger.js","webpack://aw-webui/./node_modules/lodash/toNumber.js","webpack://aw-webui/./node_modules/lodash/values.js","webpack://aw-webui/./src/queries.ts"],"sourcesContent":["var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","module.exports = require('./forEach');\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n","var baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","import _ from 'lodash';\n\n// TODO: Sanitize string input of buckets\n\nfunction querystr_to_array(querystr: string): string[] {\n  return querystr\n    .split(';')\n    .map(s => s.trim())\n    .filter(s => s)\n    .map(s => s + ';');\n}\n\nfunction escape_doublequote(s: string) {\n  return s.replace(/\"/g, '\\\\\"');\n}\n\n// Hostname safe for using as a variable name\nfunction safeHostname(hostname: string): string {\n  return hostname.replace(/[^a-zA-Z0-9_]/g, '');\n}\n\ninterface Rule {\n  type: string;\n  regex?: string;\n}\n\ntype Category = [string[], Rule];\n\ninterface BaseQueryParams {\n  include_audible?: boolean;\n  categories: Category[];\n  filter_categories: string[][];\n  bid_browsers?: string[];\n  bid_stopwatch?: string;\n  return_variable_suffix?: string;\n}\n\ninterface DesktopQueryParams extends BaseQueryParams {\n  bid_window: string;\n  bid_afk: string;\n  filter_afk: boolean;\n  always_active_pattern: string;\n}\n\ninterface AndroidQueryParams extends BaseQueryParams {\n  bid_android: string;\n}\n\ninterface MultiQueryParams extends BaseQueryParams {\n  hosts: string[];\n  filter_afk: boolean;\n  always_active_pattern: string;\n  // This can be used to override params on a per-host basis\n  host_params: { [host: string]: DesktopQueryParams | AndroidQueryParams };\n}\n\nfunction get_params(\n  params: MultiQueryParams,\n  host: string\n): DesktopQueryParams | AndroidQueryParams {\n  // Return the params for a given host, based on the self params and any overrides in host_params.\n  // If no overrides are found, return the base params.\n  const new_params: DesktopQueryParams = {\n    ...params,\n    bid_window: 'aw-watcher-window_' + host,\n    bid_afk: 'aw-watcher-afk_' + host,\n    bid_browsers: [],\n    return_variable_suffix: safeHostname(host),\n  };\n\n  const host_params = params.host_params[host];\n  if (host_params) {\n    if (!isDesktopParams(host_params)) {\n      console.error(`Invalid host_params for host ${host}: ${JSON.stringify(host_params)}`);\n    }\n    // Only override the params if they are defined and set to a truthy value\n    Object.keys(host_params).forEach(key => {\n      if (host_params[key] && host_params[key].length > 0) {\n        new_params[key] = host_params[key];\n      }\n    });\n  }\n  return new_params;\n}\n\nfunction isDesktopParams(object: any): object is DesktopQueryParams {\n  return 'bid_window' in object;\n}\n\nfunction isAndroidParams(object: any): object is AndroidQueryParams {\n  return 'bid_android' in object;\n}\n\nfunction isMultiParams(object: any): object is MultiQueryParams {\n  return 'hosts' in object;\n}\n\n// Constructs a query that returns a fully-detailed list of events from the merging of several sources (window, afk, web).\n// Performs:\n//  - AFK filtering (if filter_afk is true)\n//  - Categorization (if categories specified)\n//  - Filters by category (if filter_categories set)\n// Puts it's results in `events` and `not_afk` (if not_afk available for platform).\nexport function canonicalEvents(params: DesktopQueryParams | AndroidQueryParams): string {\n  // Needs escaping for regex patterns like '\\w' to work (JSON.stringify adds extra unecessary escaping)\n  const categories_str = params.categories\n    ? JSON.stringify(params.categories).replace(/\\\\\\\\/g, '\\\\')\n    : '';\n  const always_active_pattern_str = isDesktopParams(params)\n    ? params.always_active_pattern\n    : undefined;\n  const cat_filter_str = JSON.stringify(params.filter_categories);\n\n  // For simplicity, we assume that bid_window and bid_android are exchangeable (note however it needs special treatment)\n  const bid_window = isDesktopParams(params) ? params.bid_window : params.bid_android;\n\n  return [\n    // Fetch window/app events\n    `events = flood(query_bucket(\"${bid_window}\"));`,\n    // On Android, merge events to avoid overload of events\n    isAndroidParams(params) ? 'events = merge_events_by_keys(events, [\"app\"]);' : '',\n    // Fetch not-afk events\n    isDesktopParams(params)\n      ? `not_afk = flood(query_bucket(\"${params.bid_afk}\"));\n         not_afk = filter_keyvals(not_afk, \"status\", [\"not-afk\"]);` +\n        (always_active_pattern_str\n          ? `not_treat_as_afk = filter_keyvals_regex(events, \"app\", \"${always_active_pattern_str}\");\n             not_afk = period_union(not_afk, not_treat_as_afk);\n             not_treat_as_afk = filter_keyvals_regex(events, \"title\", \"${always_active_pattern_str}\");\n             not_afk = period_union(not_afk, not_treat_as_afk);`\n          : '')\n      : '',\n    // Fetch browser events\n    isDesktopParams(params) && params.bid_browsers\n      ? browserEvents(params) +\n        // Include focused and audible browser events as indications of not-afk\n        (params.include_audible\n          ? `audible_events = filter_keyvals(browser_events, \"audible\", [true]);\n             not_afk = period_union(not_afk, audible_events);`\n          : '')\n      : '',\n    // Filter out window events when the user was afk\n    isDesktopParams(params) && params.filter_afk\n      ? 'events = filter_period_intersect(events, not_afk);'\n      : '',\n    params.bid_stopwatch\n      ? `stopwatch_events = query_bucket(\"${params.bid_stopwatch}\");\n         events = period_union(events, stopwatch_events);`\n      : '',\n    // Categorize\n    params.categories ? `events = categorize(events, ${categories_str});` : '',\n    // Filter out selected categories\n    params.filter_categories\n      ? `events = filter_keyvals(events, \"$category\", ${cat_filter_str});`\n      : '',\n    // \"Return\" events by setting variable named with return_variable if set\n    params.return_variable_suffix\n      ? `events_${params.return_variable_suffix} = events;\n         not_afk_${params.return_variable_suffix} = not_afk;`\n      : '',\n  ].join('\\n');\n}\n\nexport function canonicalMultideviceEvents(params: MultiQueryParams): string {\n  // First, query each device individually\n  const queries: string[] = _.map(params.hosts, hostname => {\n    return canonicalEvents(get_params(params, hostname));\n  });\n\n  // Now we need to combine the queries to get a single series of events.\n  // To do this, we can use the union_no_overlap function, which merges events\n  // but avoids overlaps by giving priority according to the order of hosts.\n  let query = queries.join('\\n');\n  query += 'events = [];';\n  query += 'not_afk = [];';\n  for (let i = 0; i < queries.length; i++) {\n    query += `\n    events = union_no_overlap(events, events_${safeHostname(params.hosts[i])});\n    not_afk = union_no_overlap(not_afk, not_afk_${safeHostname(params.hosts[i])});\n    `;\n  }\n\n  return query;\n}\n\nconst default_limit = 100; // Hardcoded limit per group\n\nexport function appQuery(\n  appbucket: string,\n  categories: Category[],\n  filter_categories: string[][]\n): string[] {\n  appbucket = escape_doublequote(appbucket);\n  const params: AndroidQueryParams = {\n    bid_android: appbucket,\n    categories,\n    filter_categories,\n  };\n\n  const code = `\n    ${canonicalEvents(params)}\n\n    title_events = sort_by_duration(merge_events_by_keys(events, [\"app\", \"classname\"]));\n    app_events   = sort_by_duration(merge_events_by_keys(title_events, [\"app\"]));\n    cat_events   = sort_by_duration(merge_events_by_keys(events, [\"$category\"]));\n\n    events = sort_by_timestamp(events);\n    app_events  = limit_events(app_events, ${default_limit});\n    title_events  = limit_events(title_events, ${default_limit});\n    duration = sum_durations(events);\n    RETURN  = {\"app_events\": app_events, \"title_events\": title_events, \"cat_events\": cat_events, \"duration\": duration, \"active_events\": app_events};\n  `;\n  return querystr_to_array(code);\n}\n\nconst browser_appnames = {\n  chrome: [\n    // Chrome\n    'Google Chrome',\n    'Google-chrome',\n    'chrome.exe',\n    'google-chrome-stable',\n\n    // Chromium\n    'Chromium',\n    'Chromium-browser',\n    'Chromium-browser-chromium',\n    'chromium.exe',\n\n    // Pre-releases\n    'Google-chrome-beta',\n    'Google-chrome-unstable',\n\n    // Brave (should this be merged with the brave entry?)\n    'Brave-browser',\n  ],\n  firefox: [\n    // Firefox\n    'Firefox',\n    'Firefox.exe',\n    'firefox',\n    'firefox.exe',\n\n    // Firefox Developer\n    'Firefox Developer Edition',\n    'firefoxdeveloperedition',\n\n    // Pre-releases https://github.com/ActivityWatch/aw-watcher-web/issues/87\n    'Firefox-esr',\n    'Firefox Beta',\n    'Nightly',\n    'firefox-aurora',\n    'firefox-trunk-dev',\n\n    // Waterfox\n    'Waterfox',\n    'Waterfox.exe',\n    'waterfox',\n    'waterfox.exe',\n  ],\n  opera: ['opera.exe', 'Opera'],\n  brave: ['brave.exe'],\n  edge: [\n    'msedge.exe', // Windows\n    'Microsoft Edge', // macOS\n    'Microsoft-Edge-Stable', // Arch Linux: https://github.com/ActivityWatch/ActivityWatch/issues/753\n  ],\n  vivaldi: ['Vivaldi-stable', 'Vivaldi-snapshot', 'vivaldi.exe'],\n  orion: ['Orion'],\n};\n\n// Returns a list of (browserName, bucketId) pairs for found browser buckets\nfunction browsersWithBuckets(browserbuckets: string[]): [string, string][] {\n  const browsername_to_bucketid: [string, string | undefined][] = _.map(\n    Object.keys(browser_appnames),\n    browserName => {\n      const bucketId = _.find(browserbuckets, bucket_id => _.includes(bucket_id, browserName));\n      return [browserName, bucketId];\n    }\n  );\n  // Skip browsers for which a bucket couldn't be found\n  return _.filter(browsername_to_bucketid, ([, bucketId]) => bucketId !== undefined);\n}\n\n// Returns a list of active browser events (where the browser was the active window) from all browser buckets\nfunction browserEvents(params: DesktopQueryParams): string {\n  let code = `\n    browser_events = [];\n  `;\n\n  _.each(browsersWithBuckets(params.bid_browsers), ([browserName, bucketId]) => {\n    const browser_appnames_str = JSON.stringify(browser_appnames[browserName]);\n    code += `events_${browserName} = flood(query_bucket(\"${bucketId}\"));\n       window_${browserName} = filter_keyvals(events, \"app\", ${browser_appnames_str});\n       events_${browserName} = filter_period_intersect(events_${browserName}, window_${browserName});\n       events_${browserName} = split_url_events(events_${browserName});\n       browser_events = concat(browser_events, events_${browserName});\n       browser_events = sort_by_timestamp(browser_events);`;\n  });\n  return code;\n}\n\nexport function fullDesktopQuery(params: DesktopQueryParams): string[] {\n  return querystr_to_array(\n    `\n    ${canonicalEvents({\n      ...params,\n      // Escape `\"`\n      bid_window: escape_doublequote(params.bid_window),\n      bid_afk: escape_doublequote(params.bid_afk),\n      bid_browsers: _.map(params.bid_browsers, escape_doublequote),\n    })}\n    title_events = sort_by_duration(merge_events_by_keys(events, [\"app\", \"title\"]));\n    app_events   = sort_by_duration(merge_events_by_keys(title_events, [\"app\"]));\n    cat_events   = sort_by_duration(merge_events_by_keys(events, [\"$category\"]));\n\n    app_events  = limit_events(app_events, ${default_limit});\n    title_events  = limit_events(title_events, ${default_limit});\n    duration = sum_durations(events);\n    ` + // Browser events are retrieved in canonicalQuery\n      `\n    browser_events = split_url_events(browser_events);\n    browser_urls = merge_events_by_keys(browser_events, [\"url\"]);\n    browser_urls = sort_by_duration(browser_urls);\n    browser_urls = limit_events(browser_urls, ${default_limit});\n    browser_domains = merge_events_by_keys(browser_events, [\"$domain\"]);\n    browser_domains = sort_by_duration(browser_domains);\n    browser_domains = limit_events(browser_domains, ${default_limit});\n    browser_duration = sum_durations(browser_events);\n\n    RETURN = {\n        \"window\": {\n            \"app_events\": app_events,\n            \"title_events\": title_events,\n            \"cat_events\": cat_events,\n            \"active_events\": not_afk,\n            \"duration\": duration\n        },\n        \"browser\": {\n            \"domains\": browser_domains,\n            \"urls\": browser_urls,\n            \"duration\": browser_duration\n        }\n    };`\n  );\n}\n\n// Performs a query that combines data from multiple devices.\n// A multidevice-variant of fullDesktopQuery (with limitations).\n//\n// 1. Performs one canonicalEvents query per device.\n// 2. Combines the results into a single list of events using the transform union_no_overlap (which gives priority to events earlier in the list of devices).\n// 3. Compute the statistics of interest.\n//\n// NOTE: Events from devices are picked in the order of the hostnames array, such that if overlaps are detected the conflict will be resolved by choosing events from the earlier device.\n// NOTE: Only supports desktop devices (for now)\n// NOTE: Doesn't support browser buckets (and therefore not browser audible detection either)\n//       This is due to the 'unknown' hostname of browser buckets (will hopefully be fixed soon).\nexport function multideviceQuery(params: MultiQueryParams): string[] {\n  return querystr_to_array(\n    `\n    ${canonicalMultideviceEvents(params)}\n    title_events = sort_by_duration(merge_events_by_keys(events, [\"app\", \"title\"]));\n    app_events   = sort_by_duration(merge_events_by_keys(title_events, [\"app\"]));\n    cat_events   = sort_by_duration(merge_events_by_keys(events, [\"$category\"]));\n\n    app_events  = limit_events(app_events, ${default_limit});\n    title_events  = limit_events(title_events, ${default_limit});\n    duration = sum_durations(events);\n\n    RETURN = {\n        \"window\": {\n            \"app_events\": app_events,\n            \"title_events\": title_events,\n            \"cat_events\": cat_events,\n            \"active_events\": not_afk,\n            \"duration\": duration\n        },\n    };`\n  );\n}\n\nexport function editorActivityQuery(editorbuckets: string[]): string[] {\n  let q = ['events = [];'];\n  for (let editorbucket of editorbuckets) {\n    editorbucket = escape_doublequote(editorbucket);\n    q.push('events = concat(events, flood(query_bucket(\"' + editorbucket + '\")));');\n  }\n  q = q.concat([\n    'files = sort_by_duration(merge_events_by_keys(events, [\"file\", \"language\"]));',\n    `files = limit_events(files, ${default_limit});`,\n    'languages = sort_by_duration(merge_events_by_keys(events, [\"language\"]));',\n    `languages = limit_events(languages, ${default_limit});`,\n    'projects = sort_by_duration(merge_events_by_keys(events, [\"project\"]));',\n    `projects = limit_events(projects, ${default_limit});`,\n    'duration = sum_durations(events);',\n    'RETURN = {\"files\": files, \"languages\": languages, \"projects\": projects, \"duration\": duration};',\n  ]);\n  return q;\n}\n\n// Returns a query that yields a single event with the duration set to\n// the sum of all non-afk time in the queried period\nexport function activityQuery(afkbucket: string): string[] {\n  afkbucket = escape_doublequote(afkbucket);\n  return [\n    'afkbucket = \"' + afkbucket + '\";',\n    'not_afk = flood(query_bucket(afkbucket));',\n    'not_afk = filter_keyvals(not_afk, \"status\", [\"not-afk\"]);',\n    'not_afk = merge_events_by_keys(not_afk, [\"status\"]);',\n    'RETURN = not_afk;',\n  ];\n}\n\n// Equivalent function to activityQuery, but for Android (which doesn't have an afk bucket)\nexport function activityQueryAndroid(androidbucket: string): string[] {\n  androidbucket = escape_doublequote(androidbucket);\n  return [`events = query_bucket(\"${androidbucket}\");`, 'RETURN = sum_durations(events);'];\n}\n\n// Returns a query that yields a dict with a key \"cat_events\" which is an\n// array of one event per category, with the duration of each event set to the sum of the category durations.\nexport function categoryQuery(params: MultiQueryParams | DesktopQueryParams): string[] {\n  const q = `\n  ${isMultiParams(params) ? canonicalMultideviceEvents(params) : canonicalEvents(params)}\n  cat_events   = sort_by_duration(merge_events_by_keys(events, [\"$category\"]));\n  RETURN = { \"cat_events\": cat_events };\n`;\n  return querystr_to_array(q);\n}\n\nexport default {\n  fullDesktopQuery,\n  multideviceQuery,\n  appQuery,\n  activityQuery,\n  activityQueryAndroid,\n  categoryQuery,\n  editorActivityQuery,\n};\n"],"names":["trimmedEndIndex","reTrimStart","baseTrim","string","slice","replace","module","exports","arrayMap","baseValues","object","props","key","identity","castFunction","value","baseIteratee","isArrayLike","keys","createFind","findIndexFunc","collection","predicate","fromIndex","iterable","Object","iteratee","index","undefined","reWhitespace","length","test","charAt","findIndex","find","baseFindIndex","toInteger","nativeMax","Math","max","array","arrayEach","baseEach","isArray","forEach","func","baseIndexOf","isString","values","includes","guard","indexOf","baseGetTag","isObjectLike","stringTag","toNumber","INFINITY","MAX_INTEGER","toFinite","sign","result","remainder","isObject","isSymbol","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","querystr_to_array","querystr","split","map","s","trim","filter","escape_doublequote","safeHostname","hostname","get_params","params","host","new_params","bid_window","bid_afk","bid_browsers","return_variable_suffix","host_params","isDesktopParams","console","error","JSON","stringify","isAndroidParams","isMultiParams","canonicalEvents","categories_str","categories","always_active_pattern_str","always_active_pattern","cat_filter_str","filter_categories","bid_android","browserEvents","include_audible","filter_afk","bid_stopwatch","join","canonicalMultideviceEvents","queries","hosts","query","i","default_limit","appQuery","appbucket","code","browser_appnames","chrome","firefox","opera","brave","edge","vivaldi","orion","browsersWithBuckets","browserbuckets","browsername_to_bucketid","browserName","bucketId","bucket_id","browser_appnames_str","fullDesktopQuery","multideviceQuery","editorActivityQuery","editorbuckets","q","editorbucket","push","concat","activityQuery","afkbucket","activityQueryAndroid","androidbucket","categoryQuery"],"sourceRoot":""}